{"ast":null,"code":"var _jsxFileName = \"/Users/chenanqi/Desktop/react_covid19/NovalLife/react-noval-life/src/pages/signup.js\";\nimport React from \"react\";\nimport { Form, Input, Tooltip, Select, Row, Col, Checkbox, Button } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\n\nfunction Signup() {\n  return /*#__PURE__*/React.createElement(Form, Object.assign({}, formItemLayout, {\n    form: form,\n    name: \"register\",\n    initialValues: {\n      prefix: \"1\"\n    },\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: \"E-mail\",\n    rules: [{\n      type: \"email\",\n      message: \"The input is not valid E-mail!\"\n    }, {\n      required: true,\n      message: \"Please input your E-mail!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: \"Password\",\n    rules: [{\n      required: true,\n      message: \"Please input your password!\"\n    }],\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"confirm\",\n    label: \"Confirm Password\",\n    dependencies: [\"password\"],\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: \"Please confirm your password!\"\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (!value || getFieldValue(\"password\") === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject(\"The two passwords that you entered do not match!\");\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"nickname\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Nickname\\xA0\", /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"What do you want others to call you?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }))),\n    rules: [{\n      required: true,\n      message: \"Please input your nickname!\",\n      whitespace: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"phone\",\n    label: \"Phone Number\",\n    rules: [{\n      required: true,\n      message: \"Please input your phone number!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    addonBefore: prefixSelector,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Captcha\",\n    extra: \"We must make sure that your are a human.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"captcha\",\n    noStyle: true,\n    rules: [{\n      required: true,\n      message: \"Please input the captcha you got!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Get captcha\")))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({\n    name: \"agreement\",\n    valuePropName: \"checked\",\n    rules: [{\n      validator: (_, value) => value ? Promise.resolve() : Promise.reject(\"Should accept agreement\")\n    }]\n  }, tailFormItemLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, \"I have read the \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 27\n    }\n  }, \"agreement\"))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n}\n\nexport default Signup;","map":{"version":3,"sources":["/Users/chenanqi/Desktop/react_covid19/NovalLife/react-noval-life/src/pages/signup.js"],"names":["React","Form","Input","Tooltip","Select","Row","Col","Checkbox","Button","QuestionCircleOutlined","Signup","formItemLayout","form","prefix","type","message","required","getFieldValue","validator","rule","value","Promise","resolve","reject","whitespace","prefixSelector","width","_","tailFormItemLayout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Tooltip, Select, Row, Col, Checkbox, Button } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\n\nfunction Signup() {\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      initialValues={{\n        prefix: \"1\",\n      }}\n      scrollToFirstError\n    >\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\",\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your password!\",\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={[\"password\"]}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: \"Please confirm your password!\",\n          },\n          ({ getFieldValue }) => ({\n            validator(rule, value) {\n              if (!value || getFieldValue(\"password\") === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(\n                \"The two passwords that you entered do not match!\"\n              );\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"nickname\"\n        label={\n          <span>\n            Nickname&nbsp;\n            <Tooltip title=\"What do you want others to call you?\">\n              <QuestionCircleOutlined />\n            </Tooltip>\n          </span>\n        }\n        rules={[\n          {\n            required: true,\n            message: \"Please input your nickname!\",\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"phone\"\n        label=\"Phone Number\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your phone number!\",\n          },\n        ]}\n      >\n        <Input\n          addonBefore={prefixSelector}\n          style={{\n            width: \"100%\",\n          }}\n        />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Captcha\"\n        extra=\"We must make sure that your are a human.\"\n      >\n        <Row gutter={8}>\n          <Col span={12}>\n            <Form.Item\n              name=\"captcha\"\n              noStyle\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input the captcha you got!\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Button>Get captcha</Button>\n          </Col>\n        </Row>\n      </Form.Item>\n\n      <Form.Item\n        name=\"agreement\"\n        valuePropName=\"checked\"\n        rules={[\n          {\n            validator: (_, value) =>\n              value\n                ? Promise.resolve()\n                : Promise.reject(\"Should accept agreement\"),\n          },\n        ]}\n        {...tailFormItemLayout}\n      >\n        <Checkbox>\n          I have read the <a href=\"\">agreement</a>\n        </Checkbox>\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}